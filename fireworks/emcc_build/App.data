#version 300 es
precision highp float;

in vec4 PassColor;

out vec4 color;

void main() {
     vec2 coord = gl_PointCoord - vec2(0.5);
     float len = length(coord);
     //float a = len < 0.5 ? 1.0 : 0.0; 
     float a = len < 0.5 ? (len < 0.2 ? 1.0 : mix(1.0, 0.0, len * 2.0)) : 0.0;
     color = vec4(PassColor.xyz, PassColor.w * a);
}
#version 300 es

uniform mat4 iAspect;
uniform float iScale;

layout (location = 0) in vec3 Position;
layout (location = 1) in vec4 Color;

out vec4 PassColor;

void main() {
     PassColor = Color;
     gl_PointSize = 20.0 * iScale;
     gl_Position = iAspect * vec4(Position, 1.0);
}#version 300 es
precision highp float;

out vec4 color;

uniform vec2 iSize;
uniform float iTime;

vec4 vertical[2] = vec4[](
     vec4(0.15, 0.07, 0.05, 1.0),
     vec4(0.03, 0.03, 0.11, 1.0));
vec4 horizontal[2] = vec4[](
     vec4(0.23, 0.22, 0.13, 1.0),
     vec4(0.06, 0.12, 0.14, 1.0));

void main() {
     vec2 c = gl_FragCoord.xy / iSize;
     vec4 h = mix(horizontal[0], horizontal[1], c.x);
     vec4 v = mix(vertical[0], vertical[1], c.y);

     color = v;
 }#version 300 es

vec2 positions[6] = vec2[](
     vec2(1.0, -1.0),
     vec2(-1.0, -1.0),
     vec2(1.0, 1.0),
     vec2(1.0, 1.0),
     vec2(-1.0, -1.0),
     vec2(-1.0, 1.0)
);

mat4 idn = mat4(1.0, 0.0, 0.0, 0.0,
     	      	0.0, 1.0, 0.0, 0.0,
     	      	0.0, 0.0, 1.0, 0.0,
     	      	0.0, 0.0, 0.0, 1.0);

uniform vec2 iDimension;
uniform vec2 iCursor;
uniform mat4 iProjection;

void main() {
     gl_Position = idn * vec4(positions[gl_VertexID], -1.0, 1.0);
}
